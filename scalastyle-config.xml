<scalastyle commentFilter="enabled">
 <name>Scalastyle standard configuration</name>
 <check level="warning" class="org.scalastyle.file.FileTabChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.file.FileLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxFileLength"><![CDATA[800]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.file.HeaderMatchesChecker" enabled="false">
  <parameters>
   <parameter name="header"><![CDATA[]]></parameter>
  </parameters>
 </check>
 <!--<check enabled="false" class="org.scalastyle.scalariform.TodoCommentChecker" level="warning">-->
  <!--<parameters>-->
   <!--<parameter default="TODO|FIXME" type="string" name="words"/>-->
  <!--</parameters>-->
 <!--</check>-->
 <!-- Enable IndentationChecker after java-style comments are fixed? -->
 <!--<check level="warning" class="org.scalastyle.file.IndentationChecker" enabled="true">-->
  <!--<parameters>-->
   <!--<parameter name="tabSize">2</parameter>-->
   <!--<parameter name="methodParamIndentSize">2</parameter>-->
  <!--</parameters>-->
 <!--</check>-->
 <check level="warning" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"></check>
 <check enabled="true" class="org.scalastyle.scalariform.ForBraceChecker" level="warning"/>
 <check level="warning" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxLineLength"><![CDATA[120]]></parameter>
   <parameter name="tabSize"><![CDATA[2]]></parameter>
  </parameters>
 </check>
 <!--<check enabled="false" class="org.scalastyle.scalariform.BlockImportChecker" level="warning"/>-->
 <check level="warning" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
  </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.ClassTypeParameterChecker" level="warning">
  <parameters>
   <parameter name="regex">^[A-Z_]$</parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
  </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.FieldNamesChecker" level="warning">
  <parameters>
   <parameter name="regex">^[A-Za-z][A-Za-z0-9]*$</parameter>
  </parameters>
 </check>
 <!--<check level="warning" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">-->
  <!--<parameters>-->
   <!--<parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>-->
  <!--</parameters>-->
 <!--</check>-->
 <check level="warning" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="false">
  <parameters>
   <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
  <parameters>
   <parameter name="maxParameters"><![CDATA[8]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="true">
  <parameters>
   <parameter name="ignore"><![CDATA[0,1]]></parameter>
  </parameters>
 </check>
 <!--<check enabled="false" class="org.scalastyle.scalariform.PatternMatchAlignChecker" level="warning"/>-->
 <check enabled="true" class="org.scalastyle.scalariform.ProcedureDeclarationChecker" level="warning"/>
 <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.NullChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"></check>
 <check enabled="true" class="org.scalastyle.scalariform.NotImplementedErrorUsage" level="warning"/>
 <check customId="println" level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
  <customMessage>Please remove printlns before commit</customMessage>
  <parameters>
   <parameter name="regex"><![CDATA[println]]></parameter>
  </parameters>
 </check>
 <check customId="semicolons" level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
  <customMessage>Please don't use semicolons at the end of lines</customMessage>
  <parameters>
   <parameter name="regex"><![CDATA[.*;\n]]></parameter>
  </parameters>
 </check>
 <check customId="verticalAlignment" level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
  <customMessage>Please don't use vertical alignment</customMessage>
  <parameters>
   <parameter name="regex"><![CDATA[(?m) *.[^\s/]+ \s+]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
  <parameters>
   <parameter name="maxTypes"><![CDATA[30]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
  <parameters>
   <parameter name="maximum"><![CDATA[10]]></parameter>
  </parameters>
 </check>
 <!--<check enabled="false" class="org.scalastyle.scalariform.DisallowSpaceAfterTokenChecker" level="warning">-->
  <!--<parameters>-->
   <!--<parameter name="tokens"></parameter>-->
  <!--</parameters>-->
 <!--</check>-->
 <check enabled="true" class="org.scalastyle.scalariform.DisallowSpaceBeforeTokenChecker" level="warning">
  <parameters>
   <parameter name="tokens">COMMA</parameter>
  </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.EnsureSingleSpaceAfterTokenChecker" level="warning">
  <parameters>
   <parameter name="tokens">ARROW, EQUALS, COMMA, COLON, IF, ELSE, DO, WHILE, FOR, MATCH, TRY, CATCH, FINALLY, LARROW, RARROW</parameter>
  </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.EnsureSingleSpaceBeforeTokenChecker" level="warning">
  <parameters>
   <parameter name="tokens">ARROW, EQUALS, ELSE, TRY, CATCH, FINALLY, LARROW, RARROW</parameter>
  </parameters>
 </check>
 <check customId="OmitBracesInCase" level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
  <parameters><parameter name="regex">case[^\n>]*=>\s*\{</parameter></parameters>
  <customMessage>Omit braces in case clauses.</customMessage>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
  <parameters>
   <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
   <parameter name="doubleLineAllowed"><![CDATA[true]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxLength"><![CDATA[80]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
  <parameters>
   <parameter name="maxMethods"><![CDATA[30]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.NonASCIICharacterChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.SpaceAfterCommentStartChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true"></check>
 <!--<check level="warning" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"></check>-->
 <check level="warning" class="org.scalastyle.scalariform.WhileChecker" enabled="true"></check>
 <!--<check level="warning" class="org.scalastyle.scalariform.VarFieldChecker" enabled="false"></check>-->
 <!--<check level="warning" class="org.scalastyle.scalariform.VarLocalChecker" enabled="false"></check>-->
 <check level="warning" class="org.scalastyle.scalariform.RedundantIfChecker" enabled="true"></check>
 <!--<check level="warning" class="org.scalastyle.scalariform.TokenChecker" enabled="false">-->
  <!--<parameters>-->
   <!--<parameter name="regex"><![CDATA[println]]></parameter>-->
  <!--</parameters>-->
 <!--</check>-->
 <check level="warning" class="org.scalastyle.scalariform.DeprecatedJavaChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.EmptyClassChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.ClassTypeParameterChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[A-Z_]$]]></parameter>
  </parameters>
 </check>
 <!--<check level="warning" class="org.scalastyle.scalariform.UnderscoreImportChecker" enabled="false"></check>-->
 <!--<check level="warning" class="org.scalastyle.scalariform.LowercasePatternMatchChecker" enabled="false"></check>-->
 <!--<check level="warning" class="org.scalastyle.scalariform.MultipleStringLiteralsChecker" enabled="true">
  <parameters>
   <parameter name="allowed"><![CDATA[2]]></parameter>
   <parameter name="ignoreRegex"><![CDATA[^""$]]></parameter>
  </parameters>
 </check>-->
 <check enabled="true" class="org.scalastyle.scalariform.ImportOrderChecker" level="warning">
  <parameters>
   <parameter name="groups">java,scala,others</parameter>
   <parameter name="group.java">javax?\..+</parameter>
   <parameter name="group.scala">scala\..+</parameter>
   <parameter name="group.others">.+</parameter>
  </parameters>
 </check>
 <!--<check level="warning" class="org.scalastyle.scalariform.ImportGroupingChecker" enabled="false"></check>-->
 <!--<check enabled="false" class="org.scalastyle.scalariform.XmlLiteralChecker" level="warning"/>-->
</scalastyle>
